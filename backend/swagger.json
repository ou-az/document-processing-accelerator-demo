{
  "openapi": "3.0.1",
  "info": {
    "title": "Document Processing Accelerator API",
    "description": "API for managing and processing documents",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com",
      "url": "https://example.com/support"
    },
    "termsOfService": "https://example.com/terms"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local Development Server"
    },
    {
      "url": "https://{apiGatewayUrl}/{stage}",
      "description": "AWS API Gateway",
      "variables": {
        "apiGatewayUrl": {
          "default": "api.example.com",
          "description": "Your API Gateway URL"
        },
        "stage": {
          "default": "dev",
          "description": "Deployment stage (dev, staging, prod)"
        }
      }
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token acquired from AWS Cognito"
      }
    },
    "schemas": {
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the document"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who owns the document"
          },
          "title": {
            "type": "string",
            "description": "Title of the document"
          },
          "documentType": {
            "type": "string",
            "description": "Type of document (INVOICE, RECEIPT, etc.)"
          },
          "status": {
            "type": "string",
            "description": "Processing status of the document",
            "enum": ["PENDING", "PROCESSING", "COMPLETED", "ERROR"]
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the document"
          },
          "s3Key": {
            "type": "string",
            "description": "S3 key where the document file is stored"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the document was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the document was last updated"
          }
        }
      },
      "DocumentList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Document"
        }
      },
      "DocumentInput": {
        "type": "object",
        "required": ["title", "documentType"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the document"
          },
          "documentType": {
            "type": "string",
            "description": "Type of document (INVOICE, RECEIPT, etc.)"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the document"
          }
        }
      },
      "UploadUrlRequest": {
        "type": "object",
        "required": ["documentId", "fileName", "fileType"],
        "properties": {
          "documentId": {
            "type": "string",
            "description": "ID of the document to upload"
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file being uploaded"
          },
          "fileType": {
            "type": "string",
            "description": "MIME type of the file"
          }
        }
      },
      "UploadUrlResponse": {
        "type": "object",
        "properties": {
          "uploadUrl": {
            "type": "string",
            "description": "Pre-signed URL for uploading to S3"
          },
          "documentId": {
            "type": "string",
            "description": "ID of the document"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "error": {
            "type": "string",
            "description": "Error details"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "id": {
            "type": "string",
            "description": "ID of the affected resource"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/documents": {
      "get": {
        "summary": "List all documents",
        "description": "Returns a list of all documents for the authenticated user",
        "operationId": "getDocuments",
        "tags": ["Documents"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of documents to return",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by document status",
            "schema": {
              "type": "string",
              "enum": ["PENDING", "PROCESSING", "COMPLETED", "ERROR"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of documents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new document",
        "description": "Creates a new document record",
        "operationId": "createDocument",
        "tags": ["Documents"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "summary": "Get a document by ID",
        "description": "Returns a specific document by its ID",
        "operationId": "getDocumentById",
        "tags": ["Documents"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a document",
        "description": "Deletes a document by ID",
        "operationId": "deleteDocument",
        "tags": ["Documents"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents/upload-url": {
      "post": {
        "summary": "Generate a pre-signed upload URL",
        "description": "Generates a pre-signed URL for uploading a document to S3",
        "operationId": "generateUploadUrl",
        "tags": ["Documents"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadUrlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{id}/process": {
      "post": {
        "summary": "Process a document",
        "description": "Starts the AI processing of a document",
        "operationId": "processDocument",
        "tags": ["Processing"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to process",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processing started",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
